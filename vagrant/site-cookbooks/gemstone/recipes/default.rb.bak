#
# Cookbook Name:: gemstone
# Recipe:: default
#
# Copyright 2011, YOUR_COMPANY_NAME
#
# All rights reserved - Do Not Redistribute
tmp = Chef::Config[:file_cache_path]
file = "GemStone64Bit3.0.0Beta4-x86_64.Linux.zip"
dir = "GemStone64Bit3.0.0Beta4-x86_64.Linux"

user node[:gemstone][:user] do
  action :create
  system true
  shell "/bin/bash"
end

directory node[:gemstone][:dir] do
  owner "gemstone"
  mode "0755"
  action :create
end

package "unzip" do
  action :install
end

archive_local = "#{tmp}/#{file}"
#archive_remote = "http://glass-downloads.gemstone.com/gss30/#{file}"
archive_remote = "http://10.0.2.2:83/#{file}"
unless File.exists?("/opt/gemstone/#{dir}/version.txt")
   remote_file "#{archive_local}" do
      source "#{archive_remote}"
      action :nothing
   end

   http_request "HEAD #{archive_remote}" do
      message ""
      url archive_remote
      action :head
      if File.exists?(archive_local)
         headers "If-Modified-Since" => File.mtime(archive_local).httpdate
      end
      notifies :create, resources(:remote_file => archive_local), :immediately
   end

   execute "unzip #{tmp}/#{file}" do
      cwd "/opt/gemstone"
   end

   execute "chown -R gemstone /opt/gemstone" do
   end

   execute "ln -s #{dir} product" do
      cwd "/opt/gemstone"
   end

   execute "mkdir locks; chown gemstone locks" do
      cwd "/opt/gemstone"
   end

   execute "mkdir log; chown gemstone log" do
      cwd "/opt/gemstone"
   end

   bash "adding sysctl settings" do
      code <<-EOH
         if [ "`grep shmmax /etc/sysctl.conf`" == "" ];
         then
            echo "kernel.shmmax=838860800" >> /etc/sysctl.conf
            echo "kernel.shmall=2097152" >> /etc/sysctl.conf
         fi
      EOH
   end

   execute "sysctl -w kernel.shmmax=838860801" do
   end

   execute "sysctl -w kernel.shmall=2097152" do
   end

   remote_file "/opt/gemstone/product/seaside/etc/gemstone.key" do
      source "http://seaside.gemstone.com/etc/gemstone30.key-GLASS-Linux-2CPU.txt"
      action :create_if_missing
   end
end

unless File.exists?("/etc/init.d/netldi")
   template "/etc/init.d/netldi" do
       source "netldi.erb"
       owner "root"
       group "root"
       mode 0755
   end

   bash "adding service port" do
      code <<-EOH
         if [ "`grep gs64ldi /etc/services`" == "" ]; 
         then 
            echo "gs64ldi  50377/tcp      #gemstone netldi" >> /etc/services;
         fi
      EOH
   end

   execute "activating netldi" do
      command "update-rc.d netldi defaults 80 20"
   end

   execute "starting netldi" do
      command "/etc/init.d/netldi start"
   end
end
